{"message":"unused imports: `Assigned`, `Fixed`, `TableColumn`, `VerificationStrategy`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":421,"byte_end":429,"line_start":10,"line_end":10,"column_start":63,"column_end":71,"is_primary":true,"text":[{"text":"    create_proof, keygen_pk, keygen_vk, verify_proof, Advice, Assigned, BatchVerifier, Circuit,","highlight_start":63,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":492,"byte_end":497,"line_start":11,"line_end":11,"column_start":38,"column_end":43,"is_primary":true,"text":[{"text":"    Column, ConstraintSystem, Error, Fixed, SingleVerifier, TableColumn, VerificationStrategy,","highlight_start":38,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":515,"byte_end":526,"line_start":11,"line_end":11,"column_start":61,"column_end":72,"is_primary":true,"text":[{"text":"    Column, ConstraintSystem, Error, Fixed, SingleVerifier, TableColumn, VerificationStrategy,","highlight_start":61,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/test.rs","byte_start":528,"byte_end":548,"line_start":11,"line_end":11,"column_start":74,"column_end":94,"is_primary":true,"text":[{"text":"    Column, ConstraintSystem, Error, Fixed, SingleVerifier, TableColumn, VerificationStrategy,","highlight_start":74,"highlight_end":94}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":419,"byte_end":429,"line_start":10,"line_end":10,"column_start":61,"column_end":71,"is_primary":true,"text":[{"text":"    create_proof, keygen_pk, keygen_vk, verify_proof, Advice, Assigned, BatchVerifier, Circuit,","highlight_start":61,"highlight_end":71}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/test.rs","byte_start":490,"byte_end":497,"line_start":11,"line_end":11,"column_start":36,"column_end":43,"is_primary":true,"text":[{"text":"    Column, ConstraintSystem, Error, Fixed, SingleVerifier, TableColumn, VerificationStrategy,","highlight_start":36,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/test.rs","byte_start":513,"byte_end":548,"line_start":11,"line_end":11,"column_start":59,"column_end":94,"is_primary":true,"text":[{"text":"    Column, ConstraintSystem, Error, Fixed, SingleVerifier, TableColumn, VerificationStrategy,","highlight_start":59,"highlight_end":94}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Assigned`, `Fixed`, `TableColumn`, `VerificationStrategy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:10:63\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    create_proof, keygen_pk, keygen_vk, verify_proof, Advice, Assigned, BatchVerifier, Circuit,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Column, ConstraintSystem, Error, Fixed, SingleVerifier, TableColumn, VerificationStrategy,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `halo2_gadgets::utilities::FieldValue`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":34,"byte_end":70,"line_start":2,"line_end":2,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use halo2_gadgets::utilities::FieldValue;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `halo2_gadgets::utilities::FieldValue`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse halo2_gadgets::utilities::FieldValue;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `k`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":7049,"byte_end":7050,"line_start":205,"line_end":205,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"fn prover(k: u32, params: &Params<EqAffine>, pk: &ProvingKey<EqAffine>, circuit: MyCircuit<Fp>) -> Vec<u8> {","highlight_start":11,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":7049,"byte_end":7050,"line_start":205,"line_end":205,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"fn prover(k: u32, params: &Params<EqAffine>, pk: &ProvingKey<EqAffine>, circuit: MyCircuit<Fp>) -> Vec<u8> {","highlight_start":11,"highlight_end":12}],"label":null,"suggested_replacement":"_k","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `k`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:205:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn prover(k: u32, params: &Params<EqAffine>, pk: &ProvingKey<EqAffine>, circuit: MyCircuit<Fp>) -> Vec<u8> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_k`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `w_sqrt`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/test.rs","byte_start":8278,"byte_end":8284,"line_start":244,"line_end":244,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let w_sqrt: Value<Option<Fp>> = witness.map(|v| v.sqrt().into());","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/test.rs","byte_start":8278,"byte_end":8284,"line_start":244,"line_end":244,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    let w_sqrt: Value<Option<Fp>> = witness.map(|v| v.sqrt().into());","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"_w_sqrt","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `w_sqrt`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/test.rs:244:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m244\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let w_sqrt: Value<Option<Fp>> = witness.map(|v| v.sqrt().into());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_w_sqrt`\u001b[0m\n\n"}
{"message":"4 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 4 warnings emitted\u001b[0m\n\n"}
